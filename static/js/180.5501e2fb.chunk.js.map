{"version":3,"file":"static/js/180.5501e2fb.chunk.js","mappings":"+PAGaA,EAAOC,EAAAA,EAAAA,KAAH,+MAWJC,EAAQD,EAAAA,EAAAA,MAAH,0PAgBLE,EAASF,EAAAA,EAAAA,OAAH,gPAgBNG,EAAYH,EAAAA,EAAAA,GAAH,8DAITI,GAAmBJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,kX,oCCgB7B,EA5DgB,WACd,OAAsCM,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAY,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GAClD,GAAKD,EAAL,CAEA,IAAME,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAaH,GAFf,OAEXI,EAFW,OAGjBX,EAAUW,GAHO,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GAVyB,CAW1B,GAAE,CAACP,IAEJ,IAaMY,EAAQ,WACZhB,EAAe,GAChB,EAED,OACE,iCACE,UAACT,EAAD,CAAM0B,SAfW,SAAAC,GACnBA,EAAMC,iBAENd,EAAgB,CAAEe,MAAOrB,IACzBiB,GACD,EAUiCK,UAAWhB,EAAzC,WACE,SAACZ,EAAD,CACE6B,KAAK,SACLC,YAAY,SACZ,aAAW,SACXC,MAAOzB,EACP0B,SAzBkB,SAAAP,GACxBlB,EAAekB,EAAMQ,OAAOF,MAC7B,KAyBK,SAAC9B,EAAD,CAAQ4B,KAAK,SAAb,uBAEDrB,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAClC,EAAD,WACE,SAACC,EAAD,CAAkBkC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM1B,GAAtD,SACGuB,KAFWD,EADN,MASjB,C,+LC/DDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,sCAAyCC,IADrC,uBAClBrB,EADkB,EAClBA,KADkB,kBAElBA,EAAKuB,SAFa,2CAAH,qDAKbxB,EAAY,mCAAG,WAAOQ,GAAP,yFACHa,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+Cd,EAA/C,+CADG,uBACjBP,EADiB,EACjBA,KADiB,kBAEjBA,EAAKuB,SAFY,2CAAH,sDAKZC,EAAS,mCAAG,WAAOC,GAAP,yFACAL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCJ,EAAtC,oBADA,uBACdrB,EADc,EACdA,KADc,kBAEdA,GAFc,2CAAH,sDAKT0B,EAAS,mCAAG,WAAOD,GAAP,yFACAL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,EAA9C,oBADA,uBACdrB,EADc,EACdA,KADc,kBAEdA,EAAK2B,MAFS,2CAAH,sDAKTC,EAAY,mCAAG,WAAOH,GAAP,yFACHL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,EAA9C,oBADG,uBACjBrB,EADiB,EACjBA,KADiB,kBAEjBA,EAAKuB,SAFY,2CAAH,qD","sources":["pages/movies/Movies.styled.jsx","pages/movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 30px;\n  margin-left: 30px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 2px solid grey;\n`;\n\nexport const Input = styled.input`\n  padding-left: 10px;\n  padding-right: 4px;\n  font-size: 30px;\n  border: none;\n  outline: none;\n  width: 100%;\n  height: 50px;\n  border-radius: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 25px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  height: 50px;\n  width: 100px;\n  background: darkred;\n  color: white;\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ListFilms = styled.ul`\n  margin-top: 12px;\n  width: 600px;\n`;\nexport const StyledActiveLink = styled(Link)`\n  font-weight: 400;\n  font-size: 25px;\n\n  background-color: rgb(83, 11, 12);\n  border-radius: 14px;\n  color: white;\n\n  text-decoration: none;\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: white;\n    color: #111111;\n  }\n\n  & {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n","import { Form, Input, Button } from './Movies.styled';\nimport { useEffect, useState } from 'react';\nimport { movieByQuery } from '../../services/API';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { ListFilms, StyledActiveLink } from './Movies.styled';\n\n const Movies = () => {\n  const [inputSearch, setInputSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query') ?? '';\n    if (!currentQuery) return;\n\n    const fetchByQuery = async () => {\n      try {\n        const data = await movieByQuery(currentQuery);\n        setMovies(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchByQuery();\n  }, [searchParams]);\n\n  const handleInputChange = event => {\n    setInputSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    setSearchParams({ query: inputSearch });\n    reset();\n  };\n\n  \n\n  const reset = () => {\n    setInputSearch('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} setParams={setSearchParams}>\n        <Input\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={inputSearch}\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies.map(({ id, original_title }) => (\n        <ListFilms key={id}>\n          <StyledActiveLink to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </StyledActiveLink>\n        </ListFilms>\n      ))}\n    </>\n  );\n};\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '21a8d7e14a9b5e9904fbfbdbadb21ca8';\n\nexport const movieTrending = async () =>{\n    const {data} = await axios.get(`trending/movie/week?api_key=${KEY}`);\n    return data.results;\n};\n\nexport const movieByQuery = async (query) =>{\n    const {data} = await axios.get(`search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data.results;\n}\n\nexport const movieById = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return data;\n}\n\nexport const movieCast = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return data.cast;\n}\n\nexport const movieReviews = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}&language=en-US`);\n    return data.results;\n}"],"names":["Form","styled","Input","Button","ListFilms","StyledActiveLink","Link","useState","inputSearch","setInputSearch","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","currentQuery","get","fetchByQuery","movieByQuery","data","console","log","reset","onSubmit","event","preventDefault","query","setParams","type","placeholder","value","onChange","target","map","id","original_title","to","state","from","axios","KEY","movieTrending","results","movieById","movieId","movieCast","cast","movieReviews"],"sourceRoot":""}