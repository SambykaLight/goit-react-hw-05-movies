{"version":3,"file":"static/js/812.4724b668.chunk.js","mappings":"sPAGaA,EAAQC,EAAAA,EAAAA,GAAH,oFAMLC,EAAUD,EAAAA,EAAAA,GAAH,2RAaPE,EAAUF,EAAAA,EAAAA,GAAH,kMAYPG,GAAmBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,yFAMhBK,EAASL,EAAAA,EAAAA,IAAH,2H,2BCGnB,EA/BiB,WACf,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAc,IAAIC,KAAKL,EACxB,GAAE,KAGD,iCACE,SAACT,EAAD,4CACA,SAACE,EAAD,UACGM,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACV,UAACf,EAAD,YACE,SAACG,EAAD,CACEa,IAAG,UACDD,EACIE,EAAAA,EAAYF,EACZG,EAAAA,EAAc,SAAWJ,GAE/BK,IAAKL,KAEP,SAACb,EAAD,CAAkBmB,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMf,GAAtD,SACGO,MAVSD,EADJ,QAkBnB,C,+LCxCDU,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECd,EAAa,mCAAG,sGACJa,EAAAA,EAAAA,IAAA,sCAAyCC,IADrC,uBAClBC,EADkB,EAClBA,KADkB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKbC,EAAY,mCAAG,WAAOC,GAAP,yFACHL,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CI,EAA/C,+CADG,uBACjBH,EADiB,EACjBA,KADiB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAKZG,EAAS,mCAAG,WAAOC,GAAP,yFACAP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAsCN,EAAtC,oBADA,uBACdC,EADc,EACdA,KADc,kBAEdA,GAFc,2CAAH,sDAKTM,EAAS,mCAAG,WAAOD,GAAP,yFACAP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADA,uBACdC,EADc,EACdA,KADc,kBAEdA,EAAKO,MAFS,2CAAH,sDAKTC,EAAY,mCAAG,WAAOH,GAAP,yFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADG,uBACjBC,EADiB,EACjBA,KADiB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,6ECzBlB,IAAMT,EAAY,mCACXC,EAAc,qC","sources":["pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/API.jsx","utilits/utilits.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  color: white;\n  font-size: 3rem;\n  text-align: center;\n`;\n\nexport const MovieUl = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieLi = styled.li`\n  color: red;\n  font-size: 35px;\n  text-decoration: none;\n  background-color: rgb(83, 11, 12);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const StyledActiveLink = styled(Link)`\n  color: white;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const ImgPic = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useState, useEffect } from 'react';\nimport { movieTrending } from 'services/API';\nimport {\n  Title,\n  MovieUl,\n  MovieLi,\n  ImgPic,\n  StyledActiveLink,\n} from './HomePage.styled.jsx';\nimport { IMAGE_URL, PLACEHOLDER } from '../../utilits/utilits';\nimport { useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    movieTrending('').then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <Title>Check this out... new movies</Title>\n      <MovieUl>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <MovieLi key={id}>\n            <ImgPic\n              src={`${\n                poster_path\n                  ? IMAGE_URL + poster_path\n                  : PLACEHOLDER + '?text=' + original_title\n              }`}\n              alt={original_title}\n            />\n            <StyledActiveLink to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </StyledActiveLink>\n          </MovieLi>\n        ))}\n      </MovieUl>\n    </>\n  );\n};\nexport default HomePage;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '21a8d7e14a9b5e9904fbfbdbadb21ca8';\n\nexport const movieTrending = async () =>{\n    const {data} = await axios.get(`trending/movie/week?api_key=${KEY}`);\n    return data.results;\n};\n\nexport const movieByQuery = async (query) =>{\n    const {data} = await axios.get(`search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data.results;\n}\n\nexport const movieById = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return data;\n}\n\nexport const movieCast = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return data.cast;\n}\n\nexport const movieReviews = async (movieId) =>{\n    const {data} = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}&language=en-US`);\n    return data.results;\n}","export const IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n export const PLACEHOLDER = 'https://via.placeholder.com/182x273';"],"names":["Title","styled","MovieUl","MovieLi","StyledActiveLink","Link","ImgPic","useState","movies","setMovies","location","useLocation","useEffect","movieTrending","then","map","id","original_title","poster_path","src","IMAGE_URL","PLACEHOLDER","alt","to","state","from","axios","KEY","data","results","movieByQuery","query","movieById","movieId","movieCast","cast","movieReviews"],"sourceRoot":""}